!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Adob	./model/ns3dtn-bit.h	/^                    Adob() {}$/;"	f	struct:ns3::ns3dtnbit::DtnApp::Adob
Adob	./model/ns3dtn-bit.h	/^                struct Adob {$/;"	s	class:ns3::ns3dtnbit::DtnApp
AdobDo_01	./model/ns3dtn-bit.cc	/^        void DtnApp::Adob::AdobDo_01(std::map<int, vector<vector<int>>> t_2_adjacent_array, int node_number) {$/;"	f	class:ns3::ns3dtnbit::DtnApp::Adob
AdobDo_02	./model/ns3dtn-bit.cc	/^        void DtnApp::Adob::AdobDo_02(int node_number, int teg_layer_n, int max_range) {$/;"	f	class:ns3::ns3dtnbit::DtnApp::Adob
AdobDo_03	./model/ns3dtn-bit.cc	/^        void DtnApp::Adob::AdobDo_03() {$/;"	f	class:ns3::ns3dtnbit::DtnApp::Adob
AdobDo_04	./model/ns3dtn-bit.cc	/^        void DtnApp::Adob::AdobDo_04() {$/;"	f	class:ns3::ns3dtnbit::DtnApp::Adob
AntiPacket	./model/dtn_package.h	/^            BundlePacket, AntiPacket, HelloPacket, TransmissionAck, UnKnow};$/;"	m	class:ns3::ns3dtnbit::BundleType
BPHeader	./model/dtn_package.cpp	/^        BPHeader::BPHeader() {$/;"	f	class:ns3::ns3dtnbit::BPHeader
BPHeader	./model/dtn_package.h	/^        class BPHeader : public Header {$/;"	c	namespace:ns3::ns3dtnbit
BPHeaderBasedSendDecisionDetail	./model/ns3dtn-bit.cc	/^        vector<int> DtnApp::BPHeaderBasedSendDecisionDetail(BPHeader& ref_bp_header, enum CheckState check_state) {$/;"	f	class:ns3::ns3dtnbit::DtnApp
BundlePacket	./model/dtn_package.h	/^            BundlePacket, AntiPacket, HelloPacket, TransmissionAck, UnKnow};$/;"	m	class:ns3::ns3dtnbit::BundleType
BundleReceptionTailWorkDetail	./model/ns3dtn-bit.cc	/^        void DtnApp::BundleReceptionTailWorkDetail() {$/;"	f	class:ns3::ns3dtnbit::DtnApp
BundleType	./model/dtn_package.h	/^        enum class BundleType : std::uint32_t {$/;"	c	namespace:ns3::ns3dtnbit
CGR	./model/ns3dtn-bit.h	/^                    CGR,$/;"	m	class:ns3::ns3dtnbit::DtnApp::RoutingMethod
CGRRouting	./examples/ns3dtn-bit-your-example.cpp	/^            CGRRouting(DtnApp& dp) : RoutingMethodInterface(dp) { }$/;"	f	class:ns3::ns3dtnbit::CGRRouting
CGRRouting	./examples/ns3dtn-bit-your-example.cpp	/^        class CGRRouting : public RoutingMethodInterface {$/;"	c	namespace:ns3::ns3dtnbit	file:
COMMON_HEADER_H	./model/common_header.h	2;"	d
CheckBuffer	./model/ns3dtn-bit.cc	/^        void DtnApp::CheckBuffer(CheckState check_state) {$/;"	f	class:ns3::ns3dtnbit::DtnApp
CheckBufferSwitchStateDetail	./model/ns3dtn-bit.cc	/^        void DtnApp::CheckBufferSwitchStateDetail(bool real_send_boolean, DtnApp::CheckState check_state) {$/;"	f	class:ns3::ns3dtnbit::DtnApp
CheckState	./model/ns3dtn-bit.h	/^                enum class CheckState {$/;"	c	class:ns3::ns3dtnbit::DtnApp
ConfigureEx	./examples/ns3dtn-bit-example-interface.cpp	/^        void DtnExampleInterface::ConfigureEx(int argc, char** argv) {$/;"	f	class:ns3::ns3dtnbit::DtnExampleInterface
CongestionControlMethod	./model/ns3dtn-bit.h	/^                enum class CongestionControlMethod {$/;"	c	class:ns3::ns3dtnbit::DtnApp
ContactReviewProcedure	./examples/ns3dtn-bit-your-example.cpp	/^            void ContactReviewProcedure(node_id_t cur_d, dtn_time_t cur_expired_time) {$/;"	f	class:ns3::ns3dtnbit::CGRRouting	file:
CourseChanged	./examples/ns3dtn-bit-example-interface.cpp	/^        static void CourseChanged(std::ostream *myos, std::string something, Ptr<const MobilityModel> mobility) {$/;"	f	namespace:ns3::ns3dtnbit
CreateAdjacentList	./examples/ns3dtn-bit-example-interface.cpp	/^        vector<DtnApp::Adob> DtnExampleInterface::CreateAdjacentList() {$/;"	f	class:ns3::ns3dtnbit::DtnExampleInterface
CreateDevices	./examples/ns3dtn-bit-example-interface.cpp	/^        void DtnExampleInterface::CreateDevices() {$/;"	f	class:ns3::ns3dtnbit::DtnExampleInterface
CreateHelloBundleAndSendDetail	./model/ns3dtn-bit.cc	/^        void DtnApp::CreateHelloBundleAndSendDetail(string msg_str, Ptr<Socket> broad_cast_skt) {$/;"	f	class:ns3::ns3dtnbit::DtnApp
CreateNodes	./examples/ns3dtn-bit-example-interface.cpp	/^        void DtnExampleInterface::CreateNodes() {$/;"	f	class:ns3::ns3dtnbit::DtnExampleInterface
CreateRouting	./examples/ns3dtn-bit-example-interface.h	/^                virtual std::unique_ptr<RoutingMethodInterface> CreateRouting(DtnApp& dtn) {$/;"	f	class:ns3::ns3dtnbit::DtnExampleInterface
CreateSocketDetail	./model/ns3dtn-bit.cc	/^        void DtnApp::CreateSocketDetail() {$/;"	f	class:ns3::ns3dtnbit::DtnApp
DEBUG	./model/common_header.h	39;"	d
DTN_PACKAGE_H	./model/dtn_package.h	2;"	d
DaemonBundleHeaderInfo	./model/ns3dtn-bit.h	/^                struct DaemonBundleHeaderInfo {$/;"	s	class:ns3::ns3dtnbit::DtnApp
DaemonReceptionInfo	./model/ns3dtn-bit.h	/^                struct DaemonReceptionInfo {$/;"	s	class:ns3::ns3dtnbit::DtnApp
DaemonTransmissionInfo	./model/ns3dtn-bit.h	/^                struct DaemonTransmissionInfo {$/;"	s	class:ns3::ns3dtnbit::DtnApp
Deserialize	./model/dtn_package.cpp	/^        uint32_t BPHeader::Deserialize(Buffer::Iterator start) {$/;"	f	class:ns3::ns3dtnbit::BPHeader
DoRun	./test/ns3dtn-bit-test-suite.cc	/^Ns3dtnBitTestCase1::DoRun (void)$/;"	f	class:Ns3dtnBitTestCase1
DtnApp	./model/ns3dtn-bit.h	/^                DtnApp () : transmit_assister_(*this) {$/;"	f	class:ns3::ns3dtnbit::DtnApp
DtnApp	./model/ns3dtn-bit.h	/^        class DtnApp : public Application {$/;"	c	namespace:ns3::ns3dtnbit
DtnAppRoutingAssister	./model/ns3dtn-bit.h	/^                        DtnAppRoutingAssister() {$/;"	f	class:ns3::ns3dtnbit::DtnApp::DtnAppRoutingAssister
DtnAppRoutingAssister	./model/ns3dtn-bit.h	/^                class DtnAppRoutingAssister {$/;"	c	class:ns3::ns3dtnbit::DtnApp
DtnAppTransmitSessionAssister	./model/ns3dtn-bit.h	/^                        DtnAppTransmitSessionAssister(DtnApp& dp) : out_app_(dp) {$/;"	f	class:ns3::ns3dtnbit::DtnApp::DtnAppTransmitSessionAssister
DtnAppTransmitSessionAssister	./model/ns3dtn-bit.h	/^                class DtnAppTransmitSessionAssister {$/;"	c	class:ns3::ns3dtnbit::DtnApp
DtnExampleInterface	./examples/ns3dtn-bit-example-interface.cpp	/^        DtnExampleInterface::DtnExampleInterface() {$/;"	f	class:ns3::ns3dtnbit::DtnExampleInterface
DtnExampleInterface	./examples/ns3dtn-bit-example-interface.cpp	/^        DtnExampleInterface::DtnExampleInterface(DtnExampleInterface&& rh) {$/;"	f	class:ns3::ns3dtnbit::DtnExampleInterface
DtnExampleInterface	./examples/ns3dtn-bit-example-interface.h	/^        class DtnExampleInterface {$/;"	c	namespace:ns3::ns3dtnbit
DtnExampleRunner	./helper/ns3dtn-bit-helper.cc	/^        DtnExampleRunner::DtnExampleRunner() {$/;"	f	class:ns3::ns3dtnbit::DtnExampleRunner
DtnExampleRunner	./helper/ns3dtn-bit-helper.h	/^        class DtnExampleRunner {$/;"	c	namespace:ns3::ns3dtnbit
EmptyRouting	./examples/ns3dtn-bit-example-interface.h	/^                EmptyRouting(DtnApp& dp) : RoutingMethodInterface(dp) {}$/;"	f	class:ns3::ns3dtnbit::EmptyRouting
EmptyRouting	./examples/ns3dtn-bit-example-interface.h	/^        class EmptyRouting : public RoutingMethodInterface {$/;"	c	namespace:ns3::ns3dtnbit
Epidemic	./model/ns3dtn-bit.h	/^                    Epidemic,$/;"	m	class:ns3::ns3dtnbit::DtnApp::RoutingMethod
FilePrint	./model/ns3dtn-bit.cc	/^string FilePrint(string str) {$/;"	f
FindTheNeighborThisBPHeaderTo	./model/ns3dtn-bit.cc	/^        bool DtnApp::FindTheNeighborThisBPHeaderTo(BPHeader& ref_bp_header, int& return_index_of_neighbor_you_dedicate, DtnApp::CheckState check_state) {$/;"	f	class:ns3::ns3dtnbit::DtnApp
ForwardDecision	./examples/ns3dtn-bit-your-example.cpp	/^            int ForwardDecision() {$/;"	f	class:ns3::ns3dtnbit::CGRRouting	file:
FragmentReassembleDetail	./model/ns3dtn-bit.cc	/^        void DtnApp::FragmentReassembleDetail(int k) {$/;"	f	class:ns3::ns3dtnbit::DtnApp
GetCallStack	./model/ns3dtn-bit.cc	/^string GetCallStack(int i = 2) {$/;"	f
GetInfo	./model/ns3dtn-bit.h	/^                virtual void GetInfo(int destination_id, int from_id, std::vector<int> vec_of_current_neighbor,$/;"	f	class:ns3::ns3dtnbit::RoutingMethodInterface
GetInstanceTypeId	./model/dtn_package.cpp	/^        TypeId BPHeader::GetInstanceTypeId() const {$/;"	f	class:ns3::ns3dtnbit::BPHeader
GetLogStr	./model/ns3dtn-bit.cc	/^string GetLogStr(string str) {$/;"	f
GetSerializedSize	./model/dtn_package.cpp	/^        uint32_t BPHeader::GetSerializedSize() const {$/;"	f	class:ns3::ns3dtnbit::BPHeader
GetTypeId	./model/dtn_package.cpp	/^        TypeId BPHeader::GetTypeId() {$/;"	f	class:ns3::ns3dtnbit::BPHeader
HelloPacket	./model/dtn_package.h	/^            BundlePacket, AntiPacket, HelloPacket, TransmissionAck, UnKnow};$/;"	m	class:ns3::ns3dtnbit::BundleType
Init	./examples/ns3dtn-bit-your-example.cpp	/^            void Init() {$/;"	f	class:ns3::ns3dtnbit::CGRRouting	file:
InstallApplications	./examples/ns3dtn-bit-example-interface.cpp	/^        void DtnExampleInterface::InstallApplications() {$/;"	f	class:ns3::ns3dtnbit::DtnExampleInterface
InstallInternetStack	./examples/ns3dtn-bit-example-interface.cpp	/^        void DtnExampleInterface::InstallInternetStack() {$/;"	f	class:ns3::ns3dtnbit::DtnExampleInterface
InvokeMeWhenInstallAppToSetupDtnAppRoutingAssister	./model/ns3dtn-bit.h	/^                bool InvokeMeWhenInstallAppToSetupDtnAppRoutingAssister(RoutingMethod rm, std::unique_ptr<RoutingMethodInterface> p_rm_in, vector<Adob>& adob) {$/;"	f	class:ns3::ns3dtnbit::DtnApp
InvokeMeWhenInstallAppToSetupDtnAppRoutingAssister	./model/ns3dtn-bit.h	/^                bool InvokeMeWhenInstallAppToSetupDtnAppRoutingAssister(RoutingMethod rm, vector<Adob>& adob) {$/;"	f	class:ns3::ns3dtnbit::DtnApp
Ipv42NodeNo	./model/ns3dtn-bit.cc	/^        static int Ipv42NodeNo(Ipv4Address ip) {$/;"	f	namespace:ns3::ns3dtnbit
IsDuplicatedDetail	./model/ns3dtn-bit.cc	/^        bool DtnApp::IsDuplicatedDetail(BPHeader& bp_header) {$/;"	f	class:ns3::ns3dtnbit::DtnApp
IsSet	./model/ns3dtn-bit.h	/^                        bool IsSet() {return is_init;}$/;"	f	class:ns3::ns3dtnbit::DtnApp::DtnAppRoutingAssister
LogCounter	./examples/ns3dtn-bit-example-interface.cpp	/^        void DtnExampleInterface::LogCounter(int n) {$/;"	f	class:ns3::ns3dtnbit::DtnExampleInterface
LogPrefix	./model/ns3dtn-bit.cc	/^        std::string DtnApp::LogPrefix() {$/;"	f	class:ns3::ns3dtnbit::DtnApp
LogPrefixMacro	./model/ns3dtn-bit.cc	111;"	d	file:
NCMDecision	./examples/ns3dtn-bit-your-example.cpp	/^            int NCMDecision() {$/;"	f	class:ns3::ns3dtnbit::CGRRouting	file:
NS3DTNBIT_ANTIPACKET_EXPIRED_TIME	./model/common_header.h	51;"	d
NS3DTNBIT_BUFFER_CHECK_INTERVAL	./model/common_header.h	47;"	d
NS3DTNBIT_HELLO_BUNDLE_INTERVAL_TIME	./model/common_header.h	48;"	d
NS3DTNBIT_HELLO_BUNDLE_SIZE_MAX	./model/common_header.h	45;"	d
NS3DTNBIT_HELLO_PORT_NUMBER	./model/common_header.h	41;"	d
NS3DTNBIT_HYPOTHETIC_BUNDLE_EXPIRED_TIME	./model/common_header.h	50;"	d
NS3DTNBIT_HYPOTHETIC_INFINITE_DELAY	./model/common_header.h	52;"	d
NS3DTNBIT_HYPOTHETIC_NEIGHBOR_BAQ_NUMBER_MAX	./model/common_header.h	46;"	d
NS3DTNBIT_HYPOTHETIC_TRANS_SIZE_FRAGMENT_MAX	./model/common_header.h	44;"	d
NS3DTNBIT_MAC_MTU	./model/common_header.h	42;"	d
NS3DTNBIT_MAX_TRANSMISSION_TIMES	./model/common_header.h	43;"	d
NS3DTNBIT_PORT_NUMBER	./model/common_header.h	40;"	d
NS3DTNBIT_RETRANSMISSION_INTERVAL	./model/common_header.h	49;"	d
NS3DTN_BIT_EXAMPLE_INTERFACE_H	./examples/ns3dtn-bit-example-interface.h	2;"	d
NS3DTN_BIT_H	./model/ns3dtn-bit.h	3;"	d
NS3DTN_BIT_HELPER_H	./helper/ns3dtn-bit-helper.h	3;"	d
NeighborInfo	./model/ns3dtn-bit.h	/^                struct NeighborInfo {$/;"	s	class:ns3::ns3dtnbit::DtnApp
NoControl	./model/ns3dtn-bit.h	/^                    NoControl,$/;"	m	class:ns3::ns3dtnbit::DtnApp::CongestionControlMethod
NodeNo2Ipv4	./model/ns3dtn-bit.cc	/^        static Ipv4Address NodeNo2Ipv4(int node_no) {$/;"	f	namespace:ns3::ns3dtnbit
Ns3dtnBitTestCase1	./test/ns3dtn-bit-test-suite.cc	/^Ns3dtnBitTestCase1::Ns3dtnBitTestCase1 ()$/;"	f	class:Ns3dtnBitTestCase1
Ns3dtnBitTestCase1	./test/ns3dtn-bit-test-suite.cc	/^class Ns3dtnBitTestCase1 : public TestCase$/;"	c	file:
Ns3dtnBitTestSuite	./test/ns3dtn-bit-test-suite.cc	/^Ns3dtnBitTestSuite::Ns3dtnBitTestSuite ()$/;"	f	class:Ns3dtnBitTestSuite
Ns3dtnBitTestSuite	./test/ns3dtn-bit-test-suite.cc	/^class Ns3dtnBitTestSuite : public TestSuite$/;"	c	file:
Packet2Queueit	./model/ns3dtn-bit.cc	/^        static Ptr<QueueItem> Packet2Queueit(Ptr<Packet> p_pkt) {$/;"	f	namespace:ns3::ns3dtnbit
PeriodReorderDaemonBundleQueueDetail	./model/ns3dtn-bit.cc	/^        void DtnApp::PeriodReorderDaemonBundleQueueDetail() {$/;"	f	class:ns3::ns3dtnbit::DtnApp
PowerOn	./model/ns3dtn-bit.h	/^                    PowerOn,$/;"	m	class:ns3::ns3dtnbit::DtnApp::RunningFlag
Print	./model/dtn_package.cpp	/^        void BPHeader::Print(std::ostream& os) const {$/;"	f	class:ns3::ns3dtnbit::BPHeader
ReceiveBundle	./model/ns3dtn-bit.cc	/^        void DtnApp::ReceiveBundle(Ptr<Socket> socket) {$/;"	f	class:ns3::ns3dtnbit::DtnApp
ReceiveHello	./model/ns3dtn-bit.cc	/^        void DtnApp::ReceiveHello(Ptr<Socket> socket_handle) {$/;"	f	class:ns3::ns3dtnbit::DtnApp
RemoveBundleFromAntiDetail	./model/ns3dtn-bit.cc	/^        void DtnApp::RemoveBundleFromAntiDetail(Ptr<Packet> p_anti_pkt) {$/;"	f	class:ns3::ns3dtnbit::DtnApp
RemoveExpiredBAQDetail	./model/ns3dtn-bit.cc	/^        void DtnApp::RemoveExpiredBAQDetail() {$/;"	f	class:ns3::ns3dtnbit::DtnApp
Report	./model/ns3dtn-bit.cc	/^        void DtnApp::Report(std::ostream& os) {$/;"	f	class:ns3::ns3dtnbit::DtnApp
RouteIt	./model/ns3dtn-bit.cc	/^        int DtnApp::DtnAppRoutingAssister::RouteIt(int s, int d) {$/;"	f	class:ns3::ns3dtnbit::DtnApp::DtnAppRoutingAssister
RoutingMethod	./model/ns3dtn-bit.h	/^                enum class RoutingMethod {$/;"	c	class:ns3::ns3dtnbit::DtnApp
RoutingMethodInterface	./model/ns3dtn-bit.h	/^                RoutingMethodInterface(DtnApp& dp) : out_app_(dp) {}$/;"	f	class:ns3::ns3dtnbit::RoutingMethodInterface
RoutingMethodInterface	./model/ns3dtn-bit.h	/^        class RoutingMethodInterface {$/;"	c	namespace:ns3::ns3dtnbit
RunEx	./examples/ns3dtn-bit-example-interface.cpp	/^        void DtnExampleInterface::RunEx() {$/;"	f	class:ns3::ns3dtnbit::DtnExampleInterface
RunIt	./helper/ns3dtn-bit-helper.cc	/^        void DtnExampleRunner::RunIt(int argc, char** argv) {$/;"	f	class:ns3::ns3dtnbit::DtnExampleRunner
RunnerLoad	./helper/ns3dtn-bit-helper.cc	/^        DtnExampleRunner& DtnExampleRunner::RunnerLoad(std::unique_ptr<DtnExampleInterface>& ex_p) {$/;"	f	class:ns3::ns3dtnbit::DtnExampleRunner
RunningFlag	./model/ns3dtn-bit.h	/^                enum class RunningFlag {$/;"	c	class:ns3::ns3dtnbit::DtnApp
ScheduleTask	./examples/ns3dtn-bit-example-interface.cpp	/^        void DtnExampleInterface::ScheduleTask() {$/;"	f	class:ns3::ns3dtnbit::DtnExampleInterface
ScheduleTx	./model/ns3dtn-bit.cc	/^        void DtnApp::ScheduleTx (Time tNext, uint32_t dstnode, uint32_t payload_size) {$/;"	f	class:ns3::ns3dtnbit::DtnApp
SemiFillBPHeaderDetail	./model/ns3dtn-bit.cc	/^        void DtnApp::SemiFillBPHeaderDetail(BPHeader* p_bp_header) {$/;"	f	class:ns3::ns3dtnbit::DtnApp
Serialize	./model/dtn_package.cpp	/^        void BPHeader::Serialize(Buffer::Iterator start) const {$/;"	f	class:ns3::ns3dtnbit::BPHeader
SetIt	./model/ns3dtn-bit.h	/^                        void SetIt() { is_init = true; }$/;"	f	class:ns3::ns3dtnbit::DtnApp::DtnAppRoutingAssister
SetUp	./model/ns3dtn-bit.cc	/^        void DtnApp::SetUp(Ptr<Node> node) {$/;"	f	class:ns3::ns3dtnbit::DtnApp
SocketSendDetail	./model/ns3dtn-bit.cc	/^        bool DtnApp::SocketSendDetail(Ptr<Packet> p_pkt, uint32_t flags, InetSocketAddress trans_addr) {$/;"	f	class:ns3::ns3dtnbit::DtnApp
SprayAndWait	./model/ns3dtn-bit.h	/^                    SprayAndWait,$/;"	m	class:ns3::ns3dtnbit::DtnApp::RoutingMethod
SprayGoodDetail	./model/ns3dtn-bit.cc	/^        bool DtnApp::SprayGoodDetail(BPHeader bp_header, int flag) {$/;"	f	class:ns3::ns3dtnbit::DtnApp
StartApplication	./model/ns3dtn-bit.cc	/^        void DtnApp::StartApplication() {$/;"	f	class:ns3::ns3dtnbit::DtnApp
StateCheckDetail	./model/ns3dtn-bit.cc	/^        void DtnApp::StateCheckDetail() {$/;"	f	class:ns3::ns3dtnbit::DtnApp
State_0	./model/ns3dtn-bit.h	/^                    State_0,$/;"	m	class:ns3::ns3dtnbit::DtnApp::CheckState
State_1	./model/ns3dtn-bit.h	/^                    State_1,$/;"	m	class:ns3::ns3dtnbit::DtnApp::CheckState
StaticControl	./model/ns3dtn-bit.h	/^                    StaticControl,$/;"	m	class:ns3::ns3dtnbit::DtnApp::CongestionControlMethod
TegRouting	./examples/ns3dtn-bit-your-example.cpp	/^                TegRouting(DtnApp& dp) : RoutingMethodInterface(dp) {}$/;"	f	class:ns3::ns3dtnbit::TegRouting
TegRouting	./examples/ns3dtn-bit-your-example.cpp	/^        class TegRouting : public RoutingMethodInterface {$/;"	c	namespace:ns3::ns3dtnbit	file:
TimeExpanded	./model/ns3dtn-bit.h	/^                    TimeExpanded,$/;"	m	class:ns3::ns3dtnbit::DtnApp::RoutingMethod
ToSendAck	./model/ns3dtn-bit.cc	/^        void DtnApp::ToSendAck(BPHeader& ref_bp_header, Ipv4Address response_ip) {$/;"	f	class:ns3::ns3dtnbit::DtnApp
ToSendAntipacketBundle	./model/ns3dtn-bit.cc	/^        void DtnApp::ToSendAntipacketBundle(BPHeader& ref_bp_header) {$/;"	f	class:ns3::ns3dtnbit::DtnApp
ToSendBundle	./model/ns3dtn-bit.cc	/^        void DtnApp::ToSendBundle(uint32_t dstnode_number, uint32_t payload_size) {$/;"	f	class:ns3::ns3dtnbit::DtnApp
ToSendHello	./model/ns3dtn-bit.cc	/^        void DtnApp::ToSendHello(Ptr<Socket> socket, dtn_time_t simulation_end_time, Time hello_interval, bool hello_right_now_boolean) {$/;"	f	class:ns3::ns3dtnbit::DtnApp
ToTransmit	./model/ns3dtn-bit.cc	/^        void DtnApp::ToTransmit(DaemonBundleHeaderInfo bh_info, bool is_retransmit) {$/;"	f	class:ns3::ns3dtnbit::DtnApp
TransmissionAck	./model/dtn_package.h	/^            BundlePacket, AntiPacket, HelloPacket, TransmissionAck, UnKnow};$/;"	m	class:ns3::ns3dtnbit::BundleType
UpdateNeighborInfoDetail	./model/ns3dtn-bit.cc	/^        void DtnApp::UpdateNeighborInfoDetail(int which_info, int which_neighbor, int which_pkt_index) {$/;"	f	class:ns3::ns3dtnbit::DtnApp
YouRouting	./examples/ns3dtn-bit-your-example.cpp	/^                YouRouting(DtnApp& dp) : RoutingMethodInterface(dp) {}$/;"	f	class:ns3::ns3dtnbit::YouRouting
YouRouting	./examples/ns3dtn-bit-your-example.cpp	/^        class YouRouting : public RoutingMethodInterface {$/;"	c	namespace:ns3::ns3dtnbit	file:
YourExample	./examples/ns3dtn-bit-your-example.cpp	/^                YourExample() : DtnExampleInterface() {$/;"	f	class:ns3::ns3dtnbit::YourExample
YourExample	./examples/ns3dtn-bit-your-example.cpp	/^        class YourExample : public DtnExampleInterface {$/;"	c	namespace:ns3::ns3dtnbit	file:
ack_send_count_	./model/ns3dtn-bit.h	/^                int ack_send_count_ = 0;$/;"	m	class:ns3::ns3dtnbit::DtnApp
adob_cur_	./model/ns3dtn-bit.h	/^                        Adob adob_cur_;$/;"	m	class:ns3::ns3dtnbit::DtnApp::DtnAppRoutingAssister
anti_send_count_	./model/ns3dtn-bit.h	/^                int anti_send_count_ = 0;$/;"	m	class:ns3::ns3dtnbit::DtnApp
apps_	./examples/ns3dtn-bit-example-interface.h	/^                vector<Ptr<DtnApp>> apps_;$/;"	m	class:ns3::ns3dtnbit::DtnExampleInterface
best_delivery_time_	./examples/ns3dtn-bit-your-example.cpp	/^            dtn_time_t best_delivery_time_;$/;"	m	class:ns3::ns3dtnbit::CGRRouting	file:
boost	./model/ns3dtn-bit.h	/^namespace boost {$/;"	n
bundle_send_count_	./model/ns3dtn-bit.h	/^                int bundle_send_count_ = 0;$/;"	m	class:ns3::ns3dtnbit::DtnApp
bundle_type_	./model/dtn_package.h	/^                BundleType bundle_type_;$/;"	m	class:ns3::ns3dtnbit::BPHeader
cgr_xmit	./model/ns3dtn-bit.h	/^        struct cgr_xmit {$/;"	s	namespace:ns3::ns3dtnbit
cm	./model/ns3dtn-bit.h	/^                CapacityMap cm;$/;"	m	class:boost::edge_writer
congestion_control_method_	./model/ns3dtn-bit.h	/^                enum CongestionControlMethod congestion_control_method_;$/;"	m	class:ns3::ns3dtnbit::DtnApp	typeref:enum:ns3::ns3dtnbit::DtnApp::CongestionControlMethod
congestion_control_parameter_	./model/ns3dtn-bit.h	/^                double congestion_control_parameter_; \/\/ will only works when enable Dynamic congestion control$/;"	m	class:ns3::ns3dtnbit::DtnApp
contact_end_time_	./model/ns3dtn-bit.h	/^            dtn_time_t contact_end_time_;$/;"	m	struct:ns3::ns3dtnbit::cgr_xmit
contact_start_time_	./model/ns3dtn-bit.h	/^            dtn_time_t contact_start_time_;$/;"	m	struct:ns3::ns3dtnbit::cgr_xmit
cpp_examples	./test/examples-to-run.py	/^cpp_examples = [$/;"	v
daemon_antipacket_queue_	./model/ns3dtn-bit.h	/^                Ptr<Queue> daemon_antipacket_queue_;$/;"	m	class:ns3::ns3dtnbit::DtnApp
daemon_baq_bytes_max_	./model/ns3dtn-bit.h	/^                uint32_t daemon_baq_bytes_max_;$/;"	m	class:ns3::ns3dtnbit::DtnApp
daemon_bundle_queue_	./model/ns3dtn-bit.h	/^                Ptr<Queue> daemon_bundle_queue_; \/\/ m_queue, daemon bundle queue, this is where "store and forward" semantic stores$/;"	m	class:ns3::ns3dtnbit::DtnApp
daemon_consume_bundle_queue_	./model/ns3dtn-bit.h	/^                Ptr<Queue> daemon_consume_bundle_queue_; \/\/ store the bundle which is aim to be sent to this node$/;"	m	class:ns3::ns3dtnbit::DtnApp
daemon_reception_info_vec_	./model/ns3dtn-bit.h	/^                vector<DaemonReceptionInfo> daemon_reception_info_vec_;$/;"	m	class:ns3::ns3dtnbit::DtnApp
daemon_reception_packet_buffer_vec_	./model/ns3dtn-bit.h	/^                vector<Ptr<Packet>> daemon_reception_packet_buffer_vec_;$/;"	m	class:ns3::ns3dtnbit::DtnApp
daemon_reorder_buffer_queue_	./model/ns3dtn-bit.h	/^                Ptr<Queue> daemon_reorder_buffer_queue_; \/\/ m_helper_queue$/;"	m	class:ns3::ns3dtnbit::DtnApp
daemon_retransmission_packet_buffer_vec_	./model/ns3dtn-bit.h	/^                        vector<Ptr<Packet>> daemon_retransmission_packet_buffer_vec_;$/;"	m	class:ns3::ns3dtnbit::DtnApp::DtnAppTransmitSessionAssister
daemon_socket_handle_	./model/ns3dtn-bit.h	/^                Ptr<Socket> daemon_socket_handle_; \/\/ note that hello socket is another socket$/;"	m	class:ns3::ns3dtnbit::DtnApp
daemon_transmission_bh_info_vec_	./model/ns3dtn-bit.h	/^                        vector<DaemonBundleHeaderInfo> daemon_transmission_bh_info_vec_;$/;"	m	class:ns3::ns3dtnbit::DtnApp::DtnAppTransmitSessionAssister
daemon_transmission_info_vec_	./model/ns3dtn-bit.h	/^                        vector<DaemonTransmissionInfo> daemon_transmission_info_vec_;$/;"	m	class:ns3::ns3dtnbit::DtnApp::DtnAppTransmitSessionAssister
data_transmission_rate_	./model/ns3dtn-bit.h	/^            double data_transmission_rate_;$/;"	m	struct:ns3::ns3dtnbit::cgr_xmit
delay_map_	./model/ns3dtn-bit.h	/^                    DelayMap delay_map_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::Adob
destination_id_	./examples/ns3dtn-bit-your-example.cpp	/^            node_id_t destination_id_; $/;"	m	class:ns3::ns3dtnbit::CGRRouting	file:
destination_ip_	./model/dtn_package.h	/^                Ipv4Address destination_ip_;$/;"	m	class:ns3::ns3dtnbit::BPHeader
distance_	./model/ns3dtn-bit.h	/^            int distance_;$/;"	m	struct:ns3::ns3dtnbit::my_edge_property
drops_count_	./model/ns3dtn-bit.h	/^                uint32_t drops_count_;$/;"	m	class:ns3::ns3dtnbit::DtnApp
ecc_	./examples/ns3dtn-bit-your-example.cpp	/^            int ecc_;$/;"	m	class:ns3::ns3dtnbit::CGRRouting	file:
edge_writer	./model/ns3dtn-bit.h	/^                edge_writer(WeightMap w, CapacityMap c) : wm(w),cm(c) {}$/;"	f	class:boost::edge_writer
edge_writer	./model/ns3dtn-bit.h	/^        class edge_writer {$/;"	c	namespace:boost
equal_to	./model/ns3dtn-bit.h	/^                    struct equal_to : public std::binary_function<Teg_i_j_t, Teg_i_j_t, bool> {$/;"	s	struct:ns3::ns3dtnbit::DtnApp::Adob
equal_to0	./model/ns3dtn-bit.h	/^                    struct equal_to0 : public std::binary_function<DelayIndex, DelayIndex, bool> {$/;"	s	struct:ns3::ns3dtnbit::DtnApp::Adob
ex_rm_	./examples/ns3dtn-bit-example-interface.h	/^                DtnApp::RoutingMethod ex_rm_;$/;"	m	class:ns3::ns3dtnbit::DtnExampleInterface
excluded_vec_	./examples/ns3dtn-bit-your-example.cpp	/^            std::vector<node_id_t> excluded_vec_;$/;"	m	class:ns3::ns3dtnbit::CGRRouting	file:
expired_time_	./examples/ns3dtn-bit-your-example.cpp	/^            dtn_time_t expired_time_;$/;"	m	class:ns3::ns3dtnbit::CGRRouting	file:
file_stream_	./examples/ns3dtn-bit-example-interface.h	/^                std::ofstream file_stream_;$/;"	m	class:ns3::ns3dtnbit::DtnExampleInterface
forfeit_time_	./examples/ns3dtn-bit-your-example.cpp	/^            dtn_time_t forfeit_time_;$/;"	m	class:ns3::ns3dtnbit::CGRRouting	file:
g_vec_	./model/ns3dtn-bit.h	/^                    vector<Graph> g_vec_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::Adob
g_vede_m_	./model/ns3dtn-bit.h	/^                    vector<unordered_map<int, VeDe>> g_vede_m_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::Adob
get_adob	./model/ns3dtn-bit.h	/^                DtnApp::Adob get_adob() { return out_app_.routing_assister_.adob_cur_; }$/;"	f	class:ns3::ns3dtnbit::RoutingMethodInterface
get_bundle_type	./model/dtn_package.h	/^                BundleType get_bundle_type() {return bundle_type_;}$/;"	f	class:ns3::ns3dtnbit::BPHeader
get_destination_ip	./model/dtn_package.h	/^                Ipv4Address get_destination_ip() {return destination_ip_;}$/;"	f	class:ns3::ns3dtnbit::BPHeader
get_g_vec_size	./model/ns3dtn-bit.h	/^                    int get_g_vec_size() {$/;"	f	struct:ns3::ns3dtnbit::DtnApp::Adob
get_graph_for_now	./model/ns3dtn-bit.h	/^                    Graph get_graph_for_now() const {$/;"	f	struct:ns3::ns3dtnbit::DtnApp::Adob
get_hop_count	./model/dtn_package.h	/^                uint32_t get_hop_count() {return hop_count_;}$/;"	f	class:ns3::ns3dtnbit::BPHeader
get_hop_time_stamp	./model/dtn_package.h	/^                Time get_hop_time_stamp() {return Time(Seconds(hop_time_stamp_));}$/;"	f	class:ns3::ns3dtnbit::BPHeader
get_need_to_bytes	./model/ns3dtn-bit.h	/^                        int get_need_to_bytes(int index) { return daemon_transmission_info_vec_[index].info_transmission_total_send_bytes_ - daemon_transmission_info_vec_[index].info_transmission_current_sent_acked_bytes_; }$/;"	f	class:ns3::ns3dtnbit::DtnApp::DtnAppTransmitSessionAssister
get_node_number	./model/ns3dtn-bit.h	/^                    int get_node_number() {$/;"	f	struct:ns3::ns3dtnbit::DtnApp::Adob
get_offset	./model/dtn_package.h	/^                uint32_t get_offset() {return offset_size_;}$/;"	f	class:ns3::ns3dtnbit::BPHeader
get_payload_size	./model/dtn_package.h	/^                uint32_t get_payload_size() {return payload_size_;}$/;"	f	class:ns3::ns3dtnbit::BPHeader
get_retransmission_count	./model/dtn_package.h	/^                uint32_t get_retransmission_count() {return retransmission_count_;}$/;"	f	class:ns3::ns3dtnbit::BPHeader
get_rm	./model/ns3dtn-bit.h	/^                        RoutingMethod get_rm() {return rm_;}$/;"	f	class:ns3::ns3dtnbit::DtnApp::DtnAppRoutingAssister
get_source_ip	./model/dtn_package.h	/^                Ipv4Address get_source_ip() {return source_ip_;}$/;"	f	class:ns3::ns3dtnbit::BPHeader
get_source_seqno	./model/dtn_package.h	/^                dtn_seqno_t get_source_seqno() {return source_seqno_;}$/;"	f	class:ns3::ns3dtnbit::BPHeader
get_spray	./model/dtn_package.h	/^                uint32_t get_spray() {return spray_;}$/;"	f	class:ns3::ns3dtnbit::BPHeader
get_src_time_stamp	./model/dtn_package.h	/^                Time get_src_time_stamp() {return Time(Seconds(src_time_stamp_));}$/;"	f	class:ns3::ns3dtnbit::BPHeader
get_teg_size	./model/ns3dtn-bit.h	/^                    int get_teg_size() {$/;"	f	struct:ns3::ns3dtnbit::DtnApp::Adob
hold_ex_p	./helper/ns3dtn-bit-helper.h	/^                std::unique_ptr<DtnExampleInterface> hold_ex_p;$/;"	m	class:ns3::ns3dtnbit::DtnExampleRunner
hop_count_	./model/dtn_package.h	/^                uint32_t hop_count_;$/;"	m	class:ns3::ns3dtnbit::BPHeader
hop_time_stamp_	./model/dtn_package.h	/^                dtn_time_t hop_time_stamp_;$/;"	m	class:ns3::ns3dtnbit::BPHeader
hypo_c	./model/ns3dtn-bit.h	/^                    const static int hypo_c = 1;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::Adob
id_of_current_neighbor_	./examples/ns3dtn-bit-your-example.cpp	/^            std::vector<node_id_t> id_of_current_neighbor_;$/;"	m	class:ns3::ns3dtnbit::CGRRouting	file:
info_address_	./model/ns3dtn-bit.h	/^                    InetSocketAddress info_address_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::NeighborInfo
info_baq_seqno_vec_	./model/ns3dtn-bit.h	/^                    vector<dtn_seqno_t> info_baq_seqno_vec_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::NeighborInfo
info_bundle_destination_ip_	./model/ns3dtn-bit.h	/^                    Ipv4Address info_bundle_destination_ip_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::DaemonReceptionInfo
info_bundle_seqno_	./model/ns3dtn-bit.h	/^                    dtn_seqno_t info_bundle_seqno_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::DaemonReceptionInfo
info_bundle_should_receive_bytes_	./model/ns3dtn-bit.h	/^                    uint32_t info_bundle_should_receive_bytes_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::DaemonReceptionInfo
info_bundle_source_ip_	./model/ns3dtn-bit.h	/^                    Ipv4Address info_bundle_source_ip_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::DaemonReceptionInfo
info_bundle_type_	./model/ns3dtn-bit.h	/^                    BundleType info_bundle_type_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::DaemonReceptionInfo
info_daemon_baq_available_bytes_	./model/ns3dtn-bit.h	/^                    uint32_t info_daemon_baq_available_bytes_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::NeighborInfo
info_daemon_received_bytes_	./model/ns3dtn-bit.h	/^                    uint32_t info_daemon_received_bytes_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::DaemonReceptionInfo
info_fragment_pkt_pointer_vec_	./model/ns3dtn-bit.h	/^                    vector<Ptr<Packet>> info_fragment_pkt_pointer_vec_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::DaemonReceptionInfo
info_last_received_time_stamp_	./model/ns3dtn-bit.h	/^                    dtn_time_t info_last_received_time_stamp_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::DaemonReceptionInfo
info_last_seen_time_	./model/ns3dtn-bit.h	/^                    dtn_time_t info_last_seen_time_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::NeighborInfo
info_retransmission_count_	./model/ns3dtn-bit.h	/^                    uint32_t info_retransmission_count_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::DaemonBundleHeaderInfo
info_sent_ap_seqno_vec_	./model/ns3dtn-bit.h	/^                    vector<dtn_seqno_t> info_sent_ap_seqno_vec_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::NeighborInfo
info_sent_ap_time_vec_	./model/ns3dtn-bit.h	/^                    vector<dtn_time_t> info_sent_ap_time_vec_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::NeighborInfo
info_sent_bp_seqno_vec_	./model/ns3dtn-bit.h	/^                    vector<dtn_seqno_t> info_sent_bp_seqno_vec_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::NeighborInfo
info_source_seqno_	./model/ns3dtn-bit.h	/^                    dtn_seqno_t info_source_seqno_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::DaemonBundleHeaderInfo
info_transmission_bundle_first_sent_time_	./model/ns3dtn-bit.h	/^                    dtn_time_t info_transmission_bundle_first_sent_time_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::DaemonTransmissionInfo
info_transmission_bundle_last_sent_bytes_	./model/ns3dtn-bit.h	/^                    uint32_t info_transmission_bundle_last_sent_bytes_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::DaemonTransmissionInfo
info_transmission_bundle_last_sent_time_	./model/ns3dtn-bit.h	/^                    dtn_time_t info_transmission_bundle_last_sent_time_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::DaemonTransmissionInfo
info_transmission_current_sent_acked_bytes_	./model/ns3dtn-bit.h	/^                    uint32_t info_transmission_current_sent_acked_bytes_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::DaemonTransmissionInfo
info_transmission_total_send_bytes_	./model/ns3dtn-bit.h	/^                    uint32_t info_transmission_total_send_bytes_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::DaemonTransmissionInfo
info_transmit_addr_	./model/ns3dtn-bit.h	/^                    InetSocketAddress info_transmit_addr_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::DaemonBundleHeaderInfo
info_trasmission_receive_from_ip_	./model/ns3dtn-bit.h	/^                    Ipv4Address info_trasmission_receive_from_ip_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::DaemonReceptionInfo
ip2neighborvecindex	./model/ns3dtn-bit.cc	/^        static tuple<int, bool> ip2neighborvecindex(vector<DtnApp::NeighborInfo>& neighbor_info_vec_, Ipv4Address ip_from) {$/;"	f	namespace:ns3::ns3dtnbit
ip_interface_container_	./examples/ns3dtn-bit-example-interface.h	/^                Ipv4InterfaceContainer ip_interface_container_;$/;"	m	class:ns3::ns3dtnbit::DtnExampleInterface
is_init	./model/ns3dtn-bit.h	/^                        bool is_init = false;$/;"	m	class:ns3::ns3dtnbit::DtnApp::DtnAppRoutingAssister
key_hash	./model/ns3dtn-bit.h	/^                    struct key_hash : public std::unary_function<Teg_i_j_t, std::size_t> {$/;"	s	struct:ns3::ns3dtnbit::DtnApp::Adob
key_hash0	./model/ns3dtn-bit.h	/^                    struct key_hash0 : public std::unary_function<DelayIndex, std::size_t> {$/;"	s	struct:ns3::ns3dtnbit::DtnApp::Adob
load_ob	./model/ns3dtn-bit.h	/^                        void load_ob(const vector<DtnApp::Adob>& v) {$/;"	f	class:ns3::ns3dtnbit::DtnApp::DtnAppRoutingAssister
log_file_	./examples/ns3dtn-bit-example-interface.h	/^                std::string log_file_;$/;"	m	class:ns3::ns3dtnbit::DtnExampleInterface
main	./examples/ns3dtn-bit-your-example.cpp	/^int main(int argc, char *argv[]) {$/;"	f
make_edge_writer	./model/ns3dtn-bit.h	/^        edge_writer<WeightMap,CapacityMap> make_edge_writer(WeightMap w,CapacityMap c) {$/;"	f	namespace:boost
message_color_	./model/ns3dtn-bit.h	/^            int message_color_;$/;"	m	struct:ns3::ns3dtnbit::my_edge_property
my_edge_property	./model/ns3dtn-bit.h	/^            my_edge_property () { }$/;"	f	struct:ns3::ns3dtnbit::my_edge_property
my_edge_property	./model/ns3dtn-bit.h	/^            my_edge_property(int v, int c) {$/;"	f	struct:ns3::ns3dtnbit::my_edge_property
my_edge_property	./model/ns3dtn-bit.h	/^        struct my_edge_property {$/;"	s	namespace:ns3::ns3dtnbit
my_vertex_property	./model/ns3dtn-bit.h	/^            my_vertex_property() {}$/;"	f	struct:ns3::ns3dtnbit::my_vertex_property
my_vertex_property	./model/ns3dtn-bit.h	/^            my_vertex_property(string s) {$/;"	f	struct:ns3::ns3dtnbit::my_vertex_property
my_vertex_property	./model/ns3dtn-bit.h	/^        struct my_vertex_property {$/;"	s	namespace:ns3::ns3dtnbit
name2vd_map	./model/ns3dtn-bit.h	/^                    unordered_map<string, VeDe> name2vd_map;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::Adob
name_	./model/ns3dtn-bit.h	/^            string name_;$/;"	m	struct:ns3::ns3dtnbit::my_vertex_property
neighbor_info_vec_	./model/ns3dtn-bit.h	/^                vector<NeighborInfo> neighbor_info_vec_;$/;"	m	class:ns3::ns3dtnbit::DtnApp
net_devices_container_	./examples/ns3dtn-bit-example-interface.h	/^                NetDeviceContainer net_devices_container_;$/;"	m	class:ns3::ns3dtnbit::DtnExampleInterface
networkconfigurationflag_	./examples/ns3dtn-bit-your-example.cpp	/^            int networkconfigurationflag_;$/;"	m	class:ns3::ns3dtnbit::CGRRouting	file:
node_	./model/ns3dtn-bit.h	/^                Ptr<Node> node_; $/;"	m	class:ns3::ns3dtnbit::DtnApp
node_id2cgr_xmit_vec_map_	./model/ns3dtn-bit.h	/^                    map<int, vector<cgr_xmit>> node_id2cgr_xmit_vec_map_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::Adob
node_id_of_from_	./model/ns3dtn-bit.h	/^            int node_id_of_from_;       \/\/ transmission node$/;"	m	struct:ns3::ns3dtnbit::cgr_xmit
node_id_of_to_	./model/ns3dtn-bit.h	/^            int node_id_of_to_;         \/\/ receiving node$/;"	m	struct:ns3::ns3dtnbit::cgr_xmit
node_id_transmit_from_	./examples/ns3dtn-bit-your-example.cpp	/^            node_id_t node_id_transmit_from_;$/;"	m	class:ns3::ns3dtnbit::CGRRouting	file:
node_number_	./examples/ns3dtn-bit-example-interface.h	/^                uint32_t node_number_;$/;"	m	class:ns3::ns3dtnbit::DtnExampleInterface
node_number_	./model/ns3dtn-bit.h	/^                    int node_number_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::Adob
nodeid2neighborvecindex	./model/ns3dtn-bit.cc	/^        static int nodeid2neighborvecindex(vector<DtnApp::NeighborInfo>& neighbor_info_vec_, int id) {$/;"	f	namespace:ns3::ns3dtnbit
nodes_container_	./examples/ns3dtn-bit-example-interface.h	/^                NodeContainer nodes_container_;$/;"	m	class:ns3::ns3dtnbit::DtnExampleInterface
ns3	./examples/ns3dtn-bit-example-interface.cpp	/^namespace ns3 {$/;"	n	file:
ns3	./examples/ns3dtn-bit-example-interface.h	/^namespace ns3 {$/;"	n
ns3	./examples/ns3dtn-bit-your-example.cpp	/^namespace ns3 {$/;"	n	file:
ns3	./helper/ns3dtn-bit-helper.cc	/^namespace ns3 {$/;"	n	file:
ns3	./helper/ns3dtn-bit-helper.h	/^namespace ns3 {$/;"	n
ns3	./model/common_header.h	/^namespace ns3 {$/;"	n
ns3	./model/dtn_package.cpp	/^namespace ns3 {$/;"	n	file:
ns3	./model/dtn_package.h	/^namespace ns3 {$/;"	n
ns3	./model/ns3dtn-bit.cc	/^namespace ns3 {$/;"	n	file:
ns3	./model/ns3dtn-bit.h	/^namespace ns3 {$/;"	n
ns3dtnBitTestSuite	./test/ns3dtn-bit-test-suite.cc	/^static Ns3dtnBitTestSuite ns3dtnBitTestSuite;$/;"	v	file:
ns3dtnbit	./examples/ns3dtn-bit-example-interface.cpp	/^    namespace ns3dtnbit {$/;"	n	namespace:ns3	file:
ns3dtnbit	./examples/ns3dtn-bit-example-interface.h	/^    namespace ns3dtnbit {$/;"	n	namespace:ns3
ns3dtnbit	./examples/ns3dtn-bit-your-example.cpp	/^    namespace ns3dtnbit {$/;"	n	namespace:ns3	file:
ns3dtnbit	./helper/ns3dtn-bit-helper.cc	/^    namespace ns3dtnbit$/;"	n	namespace:ns3	file:
ns3dtnbit	./helper/ns3dtn-bit-helper.h	/^    namespace ns3dtnbit$/;"	n	namespace:ns3
ns3dtnbit	./model/common_header.h	/^    namespace ns3dtnbit {$/;"	n	namespace:ns3
ns3dtnbit	./model/dtn_package.cpp	/^    namespace ns3dtnbit {$/;"	n	namespace:ns3	file:
ns3dtnbit	./model/dtn_package.h	/^    namespace ns3dtnbit {$/;"	n	namespace:ns3
ns3dtnbit	./model/ns3dtn-bit.cc	/^    namespace ns3dtnbit {$/;"	n	namespace:ns3	file:
ns3dtnbit	./model/ns3dtn-bit.h	/^    namespace ns3dtnbit {$/;"	n	namespace:ns3
offset_size_	./model/dtn_package.h	/^                uint32_t offset_size_;$/;"	m	class:ns3::ns3dtnbit::BPHeader
operator ()	./model/ns3dtn-bit.h	/^                        bool operator()(const DelayIndex& lhs, const DelayIndex& rhs) const {$/;"	f	struct:ns3::ns3dtnbit::DtnApp::Adob::equal_to0
operator ()	./model/ns3dtn-bit.h	/^                        bool operator()(const Teg_i_j_t& lhs, const Teg_i_j_t& rhs) const {$/;"	f	struct:ns3::ns3dtnbit::DtnApp::Adob::equal_to
operator ()	./model/ns3dtn-bit.h	/^                        std::size_t operator()(const DelayIndex& k) const {$/;"	f	struct:ns3::ns3dtnbit::DtnApp::Adob::key_hash0
operator ()	./model/ns3dtn-bit.h	/^                        std::size_t operator()(const Teg_i_j_t& k) const {$/;"	f	struct:ns3::ns3dtnbit::DtnApp::Adob::key_hash
operator ()	./model/ns3dtn-bit.h	/^                    void operator()(std::ostream &out, const Edge& e) const {$/;"	f	class:boost::edge_writer
operator <<	./model/dtn_package.cpp	/^        std::ostream& operator<<(std::ostream& os, BPHeader const& rh) {$/;"	f	namespace:ns3::ns3dtnbit
operator <<	./model/dtn_package.cpp	/^        std::ostream& operator<<(std::ostream& os, BundleType&& rh) {$/;"	f	namespace:ns3::ns3dtnbit
operator =	./examples/ns3dtn-bit-example-interface.h	/^                DtnExampleInterface& operator=(DtnExampleInterface&& rh) {$/;"	f	class:ns3::ns3dtnbit::DtnExampleInterface
operator ==	./model/ns3dtn-bit.h	/^                    bool operator==(struct DaemonBundleHeaderInfo& rhs) {$/;"	f	struct:ns3::ns3dtnbit::DtnApp::DaemonBundleHeaderInfo
out_app_	./model/ns3dtn-bit.h	/^                        DtnApp& out_app_;$/;"	m	class:ns3::ns3dtnbit::DtnApp::DtnAppTransmitSessionAssister
out_app_	./model/ns3dtn-bit.h	/^                const DtnApp& out_app_;$/;"	m	class:ns3::ns3dtnbit::RoutingMethodInterface
override	./model/ns3dtn-bit.h	/^                void StartApplication() override;$/;"	m	class:ns3::ns3dtnbit::DtnApp
own_id_	./examples/ns3dtn-bit-your-example.cpp	/^            node_id_t own_id_;$/;"	m	class:ns3::ns3dtnbit::CGRRouting	file:
own_ip_	./model/ns3dtn-bit.h	/^                Ipv4Address own_ip_;$/;"	m	class:ns3::ns3dtnbit::DtnApp
p_rm_in_	./model/ns3dtn-bit.h	/^                        std::unique_ptr<RoutingMethodInterface> p_rm_in_;$/;"	m	class:ns3::ns3dtnbit::DtnApp::DtnAppRoutingAssister
payload_size_	./model/dtn_package.h	/^                uint32_t payload_size_; $/;"	m	class:ns3::ns3dtnbit::BPHeader
print_wifi_log_	./examples/ns3dtn-bit-example-interface.h	/^                bool print_wifi_log_;$/;"	m	class:ns3::ns3dtnbit::DtnExampleInterface
proximate_vec_	./examples/ns3dtn-bit-your-example.cpp	/^            std::vector<node_id_t> proximate_vec_;$/;"	m	class:ns3::ns3dtnbit::CGRRouting	file:
python_examples	./test/examples-to-run.py	/^python_examples = []$/;"	v
random_seed_	./examples/ns3dtn-bit-example-interface.h	/^                uint32_t random_seed_;$/;"	m	class:ns3::ns3dtnbit::DtnExampleInterface
retransmission_count_	./model/dtn_package.h	/^                uint32_t retransmission_count_;$/;"	m	class:ns3::ns3dtnbit::BPHeader
retransmission_interval_	./model/ns3dtn-bit.h	/^                dtn_time_t retransmission_interval_;$/;"	m	class:ns3::ns3dtnbit::DtnApp
rm_	./model/ns3dtn-bit.h	/^                        RoutingMethod rm_;$/;"	m	class:ns3::ns3dtnbit::DtnApp::DtnAppRoutingAssister
routing_assister_	./model/ns3dtn-bit.h	/^                DtnAppRoutingAssister routing_assister_;$/;"	m	class:ns3::ns3dtnbit::DtnApp
running_flag_	./model/ns3dtn-bit.h	/^                enum RunningFlag running_flag_;$/;"	m	class:ns3::ns3dtnbit::DtnApp	typeref:enum:ns3::ns3dtnbit::DtnApp::RunningFlag
set_bundle_type	./model/dtn_package.h	/^                void set_bundle_type(BundleType arg) {bundle_type_ = arg;}$/;"	f	class:ns3::ns3dtnbit::BPHeader
set_destination_ip	./model/dtn_package.h	/^                void set_destination_ip(Ipv4Address arg) {destination_ip_ = arg;}$/;"	f	class:ns3::ns3dtnbit::BPHeader
set_hop_count	./model/dtn_package.h	/^                void set_hop_count(uint32_t arg) {hop_count_ = arg;}$/;"	f	class:ns3::ns3dtnbit::BPHeader
set_hop_time_stamp	./model/dtn_package.h	/^                void set_hop_time_stamp(Time arg) {hop_time_stamp_ = arg.GetSeconds();}$/;"	f	class:ns3::ns3dtnbit::BPHeader
set_offset	./model/dtn_package.h	/^                void set_offset(uint32_t arg) {offset_size_ = arg;}$/;"	f	class:ns3::ns3dtnbit::BPHeader
set_payload_size	./model/dtn_package.h	/^                void set_payload_size(uint32_t arg) {payload_size_ = arg;}$/;"	f	class:ns3::ns3dtnbit::BPHeader
set_retransmission_count	./model/dtn_package.h	/^                void set_retransmission_count(uint32_t arg) {retransmission_count_ = arg;}$/;"	f	class:ns3::ns3dtnbit::BPHeader
set_rm	./model/ns3dtn-bit.h	/^                        void set_rm(RoutingMethod rm) {rm_ = rm;}$/;"	f	class:ns3::ns3dtnbit::DtnApp::DtnAppRoutingAssister
set_rmob	./model/ns3dtn-bit.h	/^                        void set_rmob(std::unique_ptr<RoutingMethodInterface> p_rm_in) {p_rm_in_ = std::move(p_rm_in);}$/;"	f	class:ns3::ns3dtnbit::DtnApp::DtnAppRoutingAssister
set_source_ip	./model/dtn_package.h	/^                void set_source_ip(Ipv4Address arg) {source_ip_ = arg;}$/;"	f	class:ns3::ns3dtnbit::BPHeader
set_source_seqno	./model/dtn_package.h	/^                void set_source_seqno(dtn_seqno_t arg) {source_seqno_ = arg;}$/;"	f	class:ns3::ns3dtnbit::BPHeader
set_spray	./model/dtn_package.h	/^                void set_spray(uint32_t arg) {spray_ = arg;}$/;"	f	class:ns3::ns3dtnbit::BPHeader
set_src_time_stamp	./model/dtn_package.h	/^                void set_src_time_stamp(Time arg) {src_time_stamp_ = arg.GetSeconds();}$/;"	f	class:ns3::ns3dtnbit::BPHeader
simulation_duration_	./examples/ns3dtn-bit-example-interface.h	/^                dtn_time_t simulation_duration_;$/;"	m	class:ns3::ns3dtnbit::DtnExampleInterface
source_ip_	./model/dtn_package.h	/^                Ipv4Address source_ip_;$/;"	m	class:ns3::ns3dtnbit::BPHeader
source_seqno_	./model/dtn_package.h	/^                dtn_seqno_t source_seqno_;$/;"	m	class:ns3::ns3dtnbit::BPHeader
spray_	./model/dtn_package.h	/^                uint32_t spray_;$/;"	m	class:ns3::ns3dtnbit::BPHeader
spray_map_	./model/ns3dtn-bit.h	/^                std::map<dtn_seqno_t, int> spray_map_;$/;"	m	class:ns3::ns3dtnbit::DtnApp
src_time_stamp_	./model/dtn_package.h	/^                dtn_time_t src_time_stamp_;$/;"	m	class:ns3::ns3dtnbit::BPHeader
t_vec_	./model/ns3dtn-bit.h	/^                    vector<dtn_time_t> t_vec_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::Adob
teg_	./model/ns3dtn-bit.h	/^                    Graph teg_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::Adob
teg_file_	./examples/ns3dtn-bit-example-interface.h	/^                std::string teg_file_;$/;"	m	class:ns3::ns3dtnbit::DtnExampleInterface
teg_routing_table_	./model/ns3dtn-bit.h	/^                    CustomedMap teg_routing_table_;$/;"	m	struct:ns3::ns3dtnbit::DtnApp::Adob
trace_file_	./examples/ns3dtn-bit-example-interface.h	/^                std::string trace_file_;$/;"	m	class:ns3::ns3dtnbit::DtnExampleInterface
transmit_assister_	./model/ns3dtn-bit.h	/^                DtnAppTransmitSessionAssister transmit_assister_;$/;"	m	class:ns3::ns3dtnbit::DtnApp
vec_	./model/ns3dtn-bit.h	/^                        vector<Adob> vec_;$/;"	m	class:ns3::ns3dtnbit::DtnApp::DtnAppRoutingAssister
wifi_ph_p	./model/ns3dtn-bit.h	/^                Ptr<WifiPhy> wifi_ph_p;$/;"	m	class:ns3::ns3dtnbit::DtnApp
wm	./model/ns3dtn-bit.h	/^                WeightMap wm;$/;"	m	class:boost::edge_writer
~Adob	./model/ns3dtn-bit.h	/^                    ~Adob() {}$/;"	f	struct:ns3::ns3dtnbit::DtnApp::Adob
~DtnApp	./model/ns3dtn-bit.h	/^                virtual ~DtnApp () {$/;"	f	class:ns3::ns3dtnbit::DtnApp
~DtnAppRoutingAssister	./model/ns3dtn-bit.h	/^                        ~DtnAppRoutingAssister() {$/;"	f	class:ns3::ns3dtnbit::DtnApp::DtnAppRoutingAssister
~DtnAppTransmitSessionAssister	./model/ns3dtn-bit.h	/^                        ~DtnAppTransmitSessionAssister() {$/;"	f	class:ns3::ns3dtnbit::DtnApp::DtnAppTransmitSessionAssister
~Ns3dtnBitTestCase1	./test/ns3dtn-bit-test-suite.cc	/^Ns3dtnBitTestCase1::~Ns3dtnBitTestCase1 ()$/;"	f	class:Ns3dtnBitTestCase1
~RoutingMethodInterface	./model/ns3dtn-bit.h	/^                virtual ~RoutingMethodInterface() {}$/;"	f	class:ns3::ns3dtnbit::RoutingMethodInterface
