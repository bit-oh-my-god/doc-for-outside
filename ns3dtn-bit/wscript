# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

# def options(opt):
#     pass

# def configure(conf):
#     conf.check_nonfatal(header_name='stdint.h', define_name='HAVE_STDINT_H')

def build(bld):
# append user defined flags after all our ones
    module = bld.create_ns3_module('ns3dtn-bit', ['core', 'wifi', 'internet', 'mobility', 'applications'])
    module.source = [
        'model/dtn_package.cpp',
        'model/ns3dtn-bit.cc',
        'helper/ns3dtn-bit-helper.cc',
        ]
    module.cxxflags = ['-std=c++11', '-Wall', '-Wextra', '-fpermissive', '-w']
    #module.cxxflags = ['-std=c++11', '-Wall']
    headers = bld(features='ns3header')
    headers.module = 'ns3dtn-bit'
    headers.source = [
        'model/common_header.h',
        'model/dtn_package.h',
        'model/ns3dtn-bit.h',
        'helper/ns3dtn-bit-helper.h',
        ]

    if bld.env.ENABLE_EXAMPLES:
        bld.recurse('examples')

    # bld.ns3_python_bindings()

